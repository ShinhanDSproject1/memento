<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinhan.memento.mapper.MentosMapper">
	<resultMap id="mentosResultMap"
		type="com.shinhan.memento.model.Mentos">
		<id property="mentosId" column="mentos_id" />
		<result property="categoryId" column="category_id" />
		<result property="languageId" column="language_id" />
		<result property="mentoId" column="mento_id" />
		<result property="title" column="title" />
		<result property="simpleContent" column="simple_content" />
		<result property="image" column="image" />
		<result property="price" column="price" />
		<result property="regionGroup" column="region_group" />
		<result property="regionSubgroup" column="region_subgroup" />
		<result property="regionDetail" column="region_detail" />
		<result property="startDay" column="start_day" />
		<result property="endDay" column="end_day" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="selectedDays" column="selected_days" />
		<result property="times" column="times" />
		<result property="minMember" column="min_member" />
		<result property="maxMember" column="max_member" />
		<result property="content" column="content" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="status" column="status" />
		<result property="matchTypeIdFirst"
			column="match_type_id_first" />
		<result property="matchTypeIdSecond"
			column="match_type_id_second" />
		<result property="matchTypeIdThird"
			column="match_type_id_third" />
	</resultMap>

	<insert id="createMentos"
		parameterType="com.shinhan.memento.dto.mentos.CreateMentosDBDTO">

		<!-- 시퀀스에서 mentos_id 미리 조회해서 DTO에 세팅 -->
		<selectKey keyProperty="mentosId" order="BEFORE"
			resultType="int">
			SELECT seq_mentos_id.nextval FROM dual
		</selectKey>

		INSERT INTO mentos (
		mentos_id, category_id, language_id,
		mento_id,
		title, simple_content,
		image, min_member, max_member,
		start_day,
		end_day,
		start_time, end_time, selected_days, region_group,
		region_subgroup,
		region_detail,
		content, price, times, created_at,
		updated_at, status,
		match_type_id_first, match_type_id_second,
		match_type_id_third
		) VALUES (
		#{mentosId}, #{categoryId},
		#{languageId}, #{mentoId}, #{title}, #{simpleContent},
		#{image},
		#{minMember}, #{maxMember},
		#{startDay}, #{endDay},
		#{startTime},
		#{endTime}, #{selectedDays}, #{regionGroup},
		#{regionSubgroup},
		#{regionDetail},
		#{content}, #{price}, #{times}, sysdate,
		null,
		'ACTIVE',
		#{matchTypeFirst}, #{matchTypeSecond}, #{matchTypeThird}
		)
	</insert>


	<update id="updateMentos" parameterType="map">
		UPDATE mentos
		SET
		category_id = #{CreateMentosDBDTO.categoryId},
		language_id = #{CreateMentosDBDTO.languageId},
		mento_id =
		#{CreateMentosDBDTO.mentoId},
		title = #{CreateMentosDBDTO.title},
		simple_content = #{CreateMentosDBDTO.simpleContent},
		<if test="CreateMentosDBDTO.image != null">
			image = #{CreateMentosDBDTO.image},
		</if>
		min_member = #{CreateMentosDBDTO.minMember},
		max_member =
		#{CreateMentosDBDTO.maxMember},
		start_day =
		#{CreateMentosDBDTO.startDay},
		end_day = #{CreateMentosDBDTO.endDay},
		start_time = #{CreateMentosDBDTO.startTime},
		end_time =
		#{CreateMentosDBDTO.endTime},
		selected_days =
		#{CreateMentosDBDTO.selectedDays},
		region_group =
		#{CreateMentosDBDTO.regionGroup},
		region_subgroup =
		#{CreateMentosDBDTO.regionSubgroup},
		region_detail =
		#{CreateMentosDBDTO.regionDetail},
		content =
		#{CreateMentosDBDTO.content},
		price = #{CreateMentosDBDTO.price},
		times
		= #{CreateMentosDBDTO.times},
		updated_at = SYSDATE,
		match_type_id_first
		= #{CreateMentosDBDTO.matchTypeFirst},
		match_type_id_second =
		#{CreateMentosDBDTO.matchTypeSecond},
		match_type_id_third =
		#{CreateMentosDBDTO.matchTypeThird}
		WHERE mentos_id = #{mentosId}
	</update>


	<select id="getAllCategories"
		resultType="com.shinhan.memento.dto.CategoryDTO">
		select category_id, category_name
		from category
	</select>

	<select id="getAllLanguages"
		resultType="com.shinhan.memento.dto.LanguageDTO">
		select language_id, language_name
		from language
	</select>

	<select id="getAllMatchTypes"
		resultType="com.shinhan.memento.dto.MatchTypeDTO">
		select match_type_id, match_type_name
		from match_type
	</select>

	<select id="getRegionGroups" resultType="java.util.Map">
		SELECT
		REGION_GROUP AS
		"key",
		REGION_GROUP AS "value"
		FROM
		MENTOS
		WHERE
		REGION_GROUP IS NOT NULL
		GROUP BY
		REGION_GROUP
		ORDER BY
		REGION_GROUP ASC
	</select>

	<select id="checkValidMentosById" parameterType="int"
		resultMap="mentosResultMap">
		select *
		from mentos
		where mentos_id=#{mentosId}
		and
		status='ACTIVE'
	</select>

	<select id="showMentosList" resultMap="mentosResultMap">
		SELECT *
		FROM (
		SELECT inner_query.*, ROWNUM AS rnum
		FROM (
		SELECT m.*
		FROM mentos m
		INNER JOIN member mem ON m.mento_id = mem.member_id
		WHERE mem.user_type = 'MENTO'
		and m.status = 'ACTIVE'
		<if test="regionGroup != null and regionGroup != ''">
			AND m.region_group = #{regionGroup}
		</if>
		<if test="matchTypeId != null">
			AND (
			m.match_type_id_first = #{matchTypeId}
			OR m.match_type_id_second = #{matchTypeId}
			OR m.match_type_id_third = #{matchTypeId}
			)
		</if>
		<if test="categoryId != null">
			AND m.category_id = #{categoryId}
		</if>
		<if test="languageId != null">
			AND m.language_id = #{languageId}
		</if>
		ORDER BY m.created_at DESC
		) inner_query
		WHERE ROWNUM &lt;= #{offset} + 6
		)
		WHERE rnum &gt; #{offset}

	</select>

	<select id="showPreMentoList" resultMap="mentosResultMap">
		SELECT m.*
		FROM mentos m
		JOIN member mem ON m.mento_id = mem.member_id
		WHERE mem.user_type = 'PREMENTO'
		AND m.price = 0
		AND m.status = 'ACTIVE'

		<if test="regionGroup != null and regionGroup != ''">
			AND m.region_group = #{regionGroup}
		</if>
		<if test="matchTypeId != null">
			AND (
			m.match_type_id_first = #{matchTypeId}
			OR
			m.match_type_id_second = #{matchTypeId}
			OR m.match_type_id_third =
			#{matchTypeId}
			)
		</if>
		<if test="categoryId != null">
			AND m.category_id = #{categoryId}
		</if>
		<if test="languageId != null">
			AND m.language_id = #{languageId}
		</if>

		ORDER BY m.created_at DESC
	</select>

	<select id="getMentosListTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM mentos
		WHERE 1=1
		<if test="regionGroup != null and regionGroup != ''">
			AND region_group = #{regionGroup}
		</if>
		<if test="matchTypeId != null">
			AND ( match_type_id_first = #{matchTypeId} OR
			match_type_id_second =
			#{matchTypeId} OR match_type_id_third =
			#{matchTypeId} )
		</if>
		<if test="categoryId != null">
			AND category_id = #{categoryId}
		</if>
		<if test="languageId != null">
			AND language_id = #{languageId}
		</if>
		AND status = 'ACTIVE'
		AND price > 0
	</select>

	<select id="showInProgressMentosList" parameterType="int"
		resultMap="mentosResultMap">
		SELECT *
		FROM (
		SELECT *
		FROM mentos
		WHERE mento_id = #{mentoId}
		AND status = 'ACTIVE'
		ORDER BY start_day DESC
		)
		where rownum &lt; = 3
	</select>

	<select id="showMentosListByMentoId" parameterType="map"
		resultMap="mentosResultMap">
		SELECT *
		FROM (
		SELECT *
		FROM mentos
		WHERE mento_id = #{mentoId}
		<if test="createdAt != null">
			AND created_at &lt; #{createdAt}
		</if>
		AND status != 'DELETE'
		ORDER BY created_at DESC
		)
		WHERE ROWNUM &lt;= 12
	</select>

	<select id="findSimilarMentosList" parameterType="map"
		resultMap="mentosResultMap">
		select *
		from (
		select * from mentos
		where
		language_id=#{languageId}
		and category_id=#{categoryId}
		and
		status='ACTIVE'
		and region_group=#{regionGroup}
		and
		mentos_id!=#{mentosId}
		order by created_at desc
		)
		where rownum &lt; =3
	</select>

	<update id="deleteMentos" parameterType="int">
		update mentos
		set
		status='DELETE', updated_at=sysdate
		where mentos_id=#{mentosId}
	</update>

	<select id="checkPermission" parameterType="map"
		resultType="Integer">
		select case
		when exists (
		select 1
		from mentos
		where mentos_id
		= #{mentosId}
		and mento_id = #{memberId}
		and status = 'ACTIVE'
		)
		then 1
		else 0
		end as result
		from dual
	</select>

	<select id="findMentoIdListByMentosId" parameterType="int"
		resultMap="mentosResultMap">
		select *
		from mentos
		where mento_id=${mentoId}
		and
		status!='DELETE'
	</select>

</mapper>

