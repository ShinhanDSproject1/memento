<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinhan.memento.dao.MatchUpDAO">

	<resultMap id="matchupListResultMap"
		type="com.shinhan.memento.dto.matchup.MatchupListDTO">
		<id property="matchupId" column="matchup_id" />
		<result property="categoryId" column="category_id" />
		<result property="categoryName" column="category_name" />
		<result property="languageId" column="language_id" />
		<result property="languageName" column="language_name" />
		<result property="leaderId" column="leader_id" />
		<result property="mentoId" column="mento_id" />
		<result property="title" column="title" />
		<result property="matchupCount" column="matchup_count" />
		<result property="startDay" column="start_day" />
		<result property="endDay" column="end_day" />
		<result property="maxMember" column="max_member" />
		<result property="hasMento" column="has_mento" />
		<result property="price" column="price" />
		<result property="regionGroup" column="region_group" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="createdAt" column="created_at" />

		<result property="profileImageUrl"
			column="leader_profile_image_url" />

	</resultMap>

	<resultMap id="matchupDetailResultMap"
		type="com.shinhan.memento.dto.matchup.MatchupDetailDTO">
		<id property="matchupId" column="matchup_id" />
		<result property="categoryId" column="category_id" />
		<result property="categoryName" column="category_name" />
		<result property="languageId" column="language_id" />
		<result property="languageName" column="language_name" />
		<result property="leaderId" column="leader_id" />
		<result property="mentoId" column="mento_id" />
		<result property="regionGroup" column="region_group" />
		<result property="regionSubgroup" column="region_subgroup" />
		<result property="regionDetail" column="region_detail" />
		<result property="startDay" column="start_day" />
		<result property="endDay" column="end_day" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="totalCount" column="count" />
		<result property="matchupCount" column="matchup_count" />
		<result property="minMember" column="min_member" />
		<result property="maxMember" column="max_member" />
		<result property="price" column="price" />
		<result property="content" column="content" />
		<result property="title" column="title" />
		<result property="matchTypeFirst" column="match_type_first" />
		<result property="matchTypeSecond" column="match_type_second" />
		<result property="matchTypeThird" column="match_type_third" />
		<result property="matchTypeFirstName"
			column="match_type_first_name" />
		<result property="matchTypeSecondName"
			column="match_type_second_name" />
		<result property="matchTypeThirdName"
			column="match_type_third_name" />
		<result property="hasMento" column="has_mento" />
		<result property="selectedDays" column="selected_days" />
		<result property="mentoNickname" column="mento_nickname" />
		<result property="mentoProfileImageUrl"
			column="mento_profile_image_url" />
		<result property="leaderNickname" column="leader_nickname" />
		<result property="leaderProfileImageUrl"
			column="leader_profile_image_url" />
	</resultMap>

	<resultMap id="matchupModelResultMap"
		type="com.shinhan.memento.model.MatchUp">
		<id property="matchupId" column="matchup_id" />
		<result property="categoryId" column="category_id" />
		<result property="languageId" column="language_id" />
		<result property="leaderId" column="leader_id" />
		<result property="minMember" column="min_member" />
		<result property="maxMember" column="max_member" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="hasMento" column="has_mento" />
		<result property="price" column="price" />
		<result property="status" column="status" />
	</resultMap>

	<select id="getMatchupModelById" parameterType="int"
		resultMap="matchupModelResultMap">
		SELECT * FROM matchup
		WHERE matchup_id = #{matchupId}
	</select>

	<select id="selectAll" resultMap="matchupListResultMap"
		parameterType="map">
		SELECT
		matchup_id, category_id, category_name, language_id, mento_id,
		language_name, selected_days, region_group, start_day, end_day,
		start_time, end_time, max_member, price, title, has_mento,
		matchup_count,leader_profile_image_url
		FROM (
		SELECT
		t.*, ROWNUM AS rnum
		FROM (
		SELECT
		m.matchup_id,
		m.category_id,
		c.category_name,
		m.language_id,
		m.mento_id,

		l.language_name,
		m.selected_days,
		m.region_group,
		m.start_day,
		m.end_day,
		m.start_time,
		m.end_time,
		m.max_member,
		m.price,
		m.title,
		m.has_mento,
		m.matchup_count,
		m.created_at,
		u.profile_image_url AS leader_profile_image_url
		<!-- (SELECT COUNT(*) FROM member_matchup mm WHERE mm.matchup_id = m.matchup_id 
			AND mm.status = 'ACTIVE') AS matchup_count -->
		FROM matchup m
		LEFT JOIN category c ON m.category_id = c.category_id
		LEFT JOIN language l ON m.language_id = l.language_id

		LEFT JOIN member u ON m.leader_id = u.member_id
		<where>
			m.status = 'ACTIVE'
			<if
				test="pagination.regionGroup != null and pagination.regionGroup != ''"> AND m.region_group LIKE CONCAT(#{pagination.regionGroup}, '%')
			</if>
			<if test="pagination.categoryId != null"> AND m.category_id = #{pagination.categoryId} </if>
			<if
				test="pagination.selectedDays != null and pagination.selectedDays != ''"> AND m.selected_days LIKE '%' || #{pagination.selectedDays} ||
				'%' </if>
			<if test="pagination.languageId != null"> AND m.language_id = #{pagination.languageId} </if>
		</where>
		ORDER BY m.created_at DESC, m.start_day
		) t
		WHERE ROWNUM &lt;= #{pagination.offset} + #{pagination.recordSize}
		)
		WHERE rnum &gt; #{pagination.offset}
	</select>

	<select id="countAll" parameterType="map" resultType="int">
		SELECT
		COUNT(*)
		FROM
		matchup m
		<where>
			m.status = 'ACTIVE'
			<if
				test="pagination.regionGroup != null and pagination.regionGroup != ''"> AND m.region_group LIKE CONCAT(#{pagination.regionGroup}, '%')
			</if>
			<if test="pagination.categoryId != null"> AND m.category_id = #{pagination.categoryId} </if>
			<if
				test="pagination.selectedDays != null and pagination.selectedDays != ''"> AND m.selected_days LIKE '%' || #{pagination.selectedDays} ||
				'%' </if>
			<if test="pagination.languageId != null"> AND m.language_id = #{pagination.languageId} </if>
		</where>
	</select>

	<select id="selectByMatchupId" parameterType="int"
		resultMap="matchupDetailResultMap">
		SELECT
		m.matchup_id,
		m.category_id,
		c.category_name,
		m.language_id,
		l.language_name,
		m.leader_id,
		m.mento_id,
		m.region_group,
		m.region_subgroup,
		m.region_detail,
		m.start_day,
		m.end_day,
		m.start_time,
		m.end_time,
		m.count,
		m.matchup_count,
		m.min_member,
		m.max_member,
		m.price,
		m.content,
		m.title,
		m.match_type_first,
		mt1.match_type_name AS match_type_first_name,
		m.match_type_second,
		mt2.match_type_name AS match_type_second_name,
		m.match_type_third,
		mt3.match_type_name AS match_type_third_name,
		m.has_mento,
		m.selected_days,
		approved_mento.NICKNAME AS mento_nickname,
		approved_mento.PROFILE_IMAGE_URL AS mento_profile_image_url,
		leader_info.NICKNAME AS leader_nickname,
		leader_info.PROFILE_IMAGE_URL AS leader_profile_image_url
		FROM matchup m
		LEFT JOIN category c ON m.category_id = c.category_id
		LEFT JOIN language l ON m.language_id = l.language_id
		LEFT JOIN match_type mt1 ON m.match_type_first = mt1.match_type_id
		LEFT JOIN match_type mt2 ON m.match_type_second = mt2.match_type_id
		LEFT JOIN match_type mt3 ON m.match_type_third = mt3.match_type_id
		LEFT JOIN MEMBER approved_mento ON m.mento_id = approved_mento.MEMBER_ID
		LEFT JOIN MEMBER leader_info ON m.leader_id = leader_info.MEMBER_ID
		WHERE m.matchup_id = #{matchupId}
		AND m.status = 'ACTIVE'
	</select>

	<select id="getDistinctRegionGroups" resultType="string">
		SELECT DISTINCT
		SUBSTR(region_group, 1, 2)
		FROM matchup
		WHERE region_group IS NOT NULL
		AND status = 'ACTIVE'
		ORDER BY 1
	</select>

	<select id="getAllCategories"
		resultType="com.shinhan.memento.dto.CategoryDTO">
		SELECT category_id AS categoryId, category_name AS
		categoryName
		FROM category
		WHERE status = 'ACTIVE'
		ORDER BY category_id
	</select>

	<select id="getAllLanguages"
		resultType="com.shinhan.memento.dto.LanguageDTO">
		SELECT language_id AS languageId, language_name AS
		languageName
		FROM language
		WHERE status = 'ACTIVE'
		ORDER BY language_id
	</select>

	<select id="getAllMatchTypes"
		resultType="com.shinhan.memento.dto.MatchTypeDTO">
		SELECT match_type_id AS matchTypeId,
		match_type_name AS matchTypeName
		FROM match_type
		WHERE status = 'ACTIVE'
		ORDER BY match_type_id
	</select>

	<select id="getActiveMemberCount" parameterType="int"
		resultType="int">
		select count(*)
		from member_matchup
		where status = 'ACTIVE'
		and matchup_id = #{matchupId}
	</select>
	<select id="getCategoryName" parameterType="int"
		resultType="String">
		select category_name
		from category
		where category_id =
		#{categoryId}
		AND status = 'ACTIVE'
	</select>
	<select id="getLanguageName" parameterType="int"
		resultType="String">
		SELECT language_name
		FROM language
		WHERE language_id =
		#{languageId}
		AND status = 'ACTIVE'
	</select>
	<select id="getMatchTypeName" parameterType="int"
		resultType="String">
		SELECT match_type_name
		FROM match_type
		WHERE match_type_id =
		#{matchTypeId}
		AND status = 'ACTIVE'
	</select>
	<insert id="createMatchup"
		parameterType="com.shinhan.memento.model.MatchUp">
		INSERT INTO matchup (
		matchup_id,
		category_id,
		language_id,
		leader_id,
		mento_id,
		match_type_first,
		match_type_second,
		match_type_third,
		title,
		"COUNT",
		matchup_count,
		start_day,
		end_day,
		start_time,
		end_time,
		min_member,
		max_member,
		content,
		has_mento,
		price,
		kg_count,
		region_group,
		region_subgroup,
		region_detail,
		selected_days,
		created_at,
		updated_at,
		"STATUS"
		) VALUES (
		SEQ_MATCHUP_ID.NEXTVAL,
		#{categoryId},
		#{languageId},
		#{leaderId},
		NULL,
		#{matchTypeFirst, jdbcType=INTEGER},
		#{matchTypeSecond, jdbcType=INTEGER},
		#{matchTypeThird, jdbcType=INTEGER},
		#{title},
		#{count},
		0,
		#{startDay},
		#{endDay},
		#{startTime},
		#{endTime},
		#{minMember},
		#{maxMember},
		#{content},
		#{hasMento, jdbcType=NUMERIC},
		#{price},
		0,
		#{regionGroup},
		#{regionSubgroup},
		#{regionDetail},
		#{selectedDays},
		SYSDATE,
		SYSDATE,
		'ACTIVE'
		)
	</insert>

	<update id="deleteMemberMatchupById" parameterType="int">
		UPDATE
		MEMBER_MATCHUP
		SET status = 'DELETE'
		WHERE MATCHUP_ID = #{matchupId}
	</update>
	<update id="deleteMatchupByIdAndLeader" parameterType="map">
		UPDATE MATCHUP
		SET status = 'DELETE',
		updated_at = sysdate
		WHERE
		MATCHUP_ID = #{matchupId}
		AND LEADER_ID = #{leaderId}
	</update>

	<update id="updateMatchup"
		parameterType="com.shinhan.memento.model.MatchUp">
		UPDATE matchup
		<set>
			<if test="title != null and title != ''">
				title = #{title},
			</if>
			<if test="content != null and content != ''">
				content = #{content},
			</if>
			<if test="categoryId != null">
				category_id = #{categoryId},
			</if>
			<if test="languageId != null">
				language_id = #{languageId},
			</if>
			<if test="mentoId != null and mentoId > 0">
				mento_id = #{mentoId},
			</if>
			<if test="matchTypeFirst != null">
				match_type_first = #{matchTypeFirst},
			</if>
			<if test="matchTypeSecond != null">
				match_type_second = #{matchTypeSecond},
			</if>
			<if test="matchTypeThird != null">
				match_type_third = #{matchTypeThird},
			</if>
			<if test="count != null">
				count = #{count},
			</if>
			<if test="startDay != null">
				start_day = #{startDay},
			</if>
			<if test="endDay != null">
				end_day = #{endDay},
			</if>
			<if test="startTime != null">
				start_time = #{startTime},
			</if>
			<if test="endTime != null">
				end_time = #{endTime},
			</if>
			<if test="minMember != null">
				min_member = #{minMember},
			</if>
			<if test="maxMember != null">
				max_member = #{maxMember},
			</if>
			<if test="price != null">
				price = #{price},
			</if>
			<if test="regionGroup != null and regionGroup != ''">
				region_group = #{regionGroup},
			</if>
			<if test="regionSubgroup != null and regionSubgroup != ''">
				region_subgroup = #{regionSubgroup},
			</if>
			<if test="regionDetail != null and regionDetail != ''">
				region_detail = #{regionDetail},
			</if>
			<if test="selectedDays != null and selectedDays != ''">
				selected_days = #{selectedDays},
			</if>
			<if test="hasMento != null">
				has_mento = #{hasMento},
			</if>
			updated_at = sysdate
		</set>
		WHERE matchup_id = #{matchupId}
	</update>

	<!-- 멘토 신청하기 (멘토 기준) -->
	<insert id="applyMento"
		parameterType="com.shinhan.memento.dto.matchup.MatchupApplyMentoDTO">
		insert into WAITINGMENTO_MATCHUP (
		WAIT_MENTO_ID,
		MEMBER_ID,
		MATCHUP_ID,
		CREATED_AT,
		STATUS
		) VALUES (
		SEQ_WAITINGMENTO_MATCHUP_ID.NEXTVAL,
		#{memberId},
		#{matchupId},
		SYSDATE,
		'ACTIVE'
		)
	</insert>

	<!-- 접속 유저의 유저타입 확인 -->
	<select id="findUserTypeById" parameterType="int"
		resultType="com.shinhan.memento.model.UserType">
		SELECT
		USER_TYPE
		FROM
		MEMBER
		WHERE
		MEMBER_ID = #{memberId}
	</select>

	<!-- 접속 유저가 해당 메치업의 멘토를 신청했는지 여부 -->
	<select id="checkMentoApplicationExists" parameterType="map"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		WAITINGMENTO_MATCHUP
		WHERE
		MEMBER_ID = #{memberId} AND MATCHUP_ID = #{matchupId} AND STATUS = 'ACTIVE'
	</select>

	<!-- 오청 중인 멘토 리스트업 -->
	<select id="selectWaitingMentoByMatchupId" parameterType="int"
		resultType="com.shinhan.memento.dto.matchup.MatchupWaitingMentoDTO">
		SELECT
		w.MEMBER_ID AS memberId,
		m.NICKNAME AS nickname,
		m.PROFILE_IMAGE_URL AS profileImageUrl
		FROM
		WAITINGMENTO_MATCHUP w
		JOIN
		MEMBER m ON w.MEMBER_ID = m.MEMBER_ID
		WHERE
		w.MATCHUP_ID = #{matchupId}
		AND w.STATUS = 'ACTIVE'
	</select>

	<!-- 매칭이 끝난 매치업의 요청 멘토들은 DELETE 처리 -->
	<update id="deleteWaitingMentoApplications" parameterType="int">
		UPDATE
		WAITINGMENTO_MATCHUP
		SET
		STATUS = 'DELETE'
		WHERE
		MATCHUP_ID = #{matchupId}
		AND STATUS = 'ACTIVE'
	</update>

	<!-- 선정된 멘토는 해당 매치업의 mento_id에 삽입 -->
	<update id="setMentoForMatchup" parameterType="map">
		UPDATE MATCHUP
		SET
		MENTO_ID = #{memberId},
		UPDATED_AT = SYSDATE
		WHERE
		MATCHUP_ID = #{matchupId}
	</update>

	<!-- 회원의 닉네임, 이미지를 호출하기 위한 용도 -->
	<select id="getApprovedMentoDetails" parameterType="int"
		resultType="com.shinhan.memento.dto.matchup.MatchupWaitingMentoDTO">
		SELECT
		MEMBER_ID AS memberId,
		NICKNAME AS nickname,
		PROFILE_IMAGE_URL AS profileImageUrl
		FROM
		MEMBER
		WHERE
		MEMBER_ID = #{memberId}
	</select>

	<update id="incrementMatchupCount" parameterType="int">
		UPDATE matchup
		SET
		matchup_count = matchup_count + 1,
		updated_at = SYSDATE
		WHERE matchup_id = #{matchupId}
	</update>
</mapper>