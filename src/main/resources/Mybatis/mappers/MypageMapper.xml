<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinhan.memento.mapper.MypageMapper">
	<insert id="insertPayment"
		parameterType="com.shinhan.memento.model.Payment">
		INSERT INTO payment (
		payment_id, member_id, order_id, pay_at, amount, pay_type, step, matchup_id,
		mentos_id, keepgoing_id, status
		) VALUES (
		seq_payment_id.nextval,
		#{memberId},
		#{orderId},
		#{payAt, jdbcType=DATE},
		#{amount},
		#{payType},
		#{step},
		#{matchupId},
		#{mentosId},
		#{keepgoingId},
		#{status}
		)
	</insert>

	<select id="selectPaymentByOrderId" parameterType="string"
		resultType="com.shinhan.memento.model.Payment">
		SELECT
		payment_id AS paymentId,
		member_id AS memberId,
		order_id AS orderId,
		pay_at AS payAt,
		amount,
		pay_type AS payType,
		step,
		matchup_id AS matchupId,
		mentos_id AS mentosId,
		keepgoing_id AS keepgoingId,
		status
		FROM payment
		WHERE order_id = #{orderId}
	</select>

	<update id="updatePaymentSuccess" parameterType="map">
		UPDATE payment
		SET step = 'SUCCESS', pay_at = #{payAt}, amount= #{cash}
		WHERE order_id = #{orderId}
	</update>

	<update id="updateUserBalance" parameterType="map">
		UPDATE userbalance
		SET balance = balance + #{amount}, updated_at = #{updatedAt}
		WHERE member_id = #{userId}
	</update>
	
	<select id="selectJoinMyMatchUpList" parameterType="int" resultType="map">
		SELECT
			mm.MATCHUP_ID as matchupId, 
			leader.PROFILE_IMAGE_URL as leaderImg, 
			m.TITLE as matchupTitle, 
			m.REGION_GROUP as regionGroup,
			m.REGION_SUBGROUP as regionSubgroup,
			cat.CATEGORY_NAME as category,
			lan.LANGUAGE_NAME as language, 	
			m.START_TIME as startTime, 		
			m.END_TIME as endTime,
			m.SELECTED_DAYS as selectedDays, 
			m.HAS_MENTO as hasMento,
			mento.NICKNAME as mentoNickname,
			m.COUNT as count, 
			m.MATCHUP_COUNT as matchupCount,
			m.STATUS as status
		FROM MEMBER_MATCHUP mm
			JOIN MATCHUP m ON mm.MATCHUP_ID = m.MATCHUP_ID
			LEFT JOIN CATEGORY cat ON m.CATEGORY_ID = cat.CATEGORY_ID
			LEFT JOIN LANGUAGE lan ON m.LANGUAGE_ID = lan.LANGUAGE_ID
			LEFT JOIN MEMBER leader ON m.LEADER_ID = leader.MEMBER_ID
			LEFT JOIN MEMBER mento ON m.MENTO_ID = mento.MEMBER_ID
		WHERE mm.MEMBER_ID = #{memberId} 
		and m.STATUS != 'DELETE'
		and mm.STATUS != 'DELETE'
	</select>
	
	<select id="selectMyCreateMatchUpList" parameterType="int" resultType="map">
		select
			m.matchup_id as matchupId, 
			leader.PROFILE_IMAGE_URL as leaderImg, 
			m.title as matchupTitle, 
			m.region_group as regionGroup,
			m.region_subgroup as regionSubgroup,
			cat.category_name as category,
			lan.language_name as language, 	
			m.start_time as startTime, 		
			m.end_time as endTime,
			m.selected_days as selectedDays, 
			m.has_mento as hasMento,
			mento.nickname as mentoNickname,
			m.count as count, 
			m.matchup_count as matchupCount,
			CASE WHEN m.leader_id = leader.member_id THEN '팀장'ELSE '팀원'END AS role,
			m.status as status
		from matchup m
			left join category cat on m.category_id = cat.category_id
			left join language lan on m.language_id = lan.language_id
			left join member leader on m.leader_id = leader.member_id
			left join member mento on m.mento_id = mento.member_id
		where leader.member_id = #{memberId}
		and m.status != 'DELETE'
	</select>
	
	<select id="selectMyMentosListById" parameterType="int" resultType="map">
		select 
		mm.mentos_id AS mentosId,
		m.image AS mentosImg,
		m.title AS mentosTitle,
		m.region_group AS regionGroup,
		m.region_subgroup AS regionSubgroup,
		m.start_time AS startTime,
		m.end_time AS endTime,
		m.selected_days AS selectedDays,
		mem.nickname AS mentoNickname,
		mem.user_type AS mentoUserType,
		m.status AS status,
		r.review_id as reviewId,
		r.status AS reviewStatus
		from member_mentos mm
		join mentos m on mm.mentos_id = m.mentos_id
		left join member mem on m.mento_id = mem.member_id
		left join review r on mm.mentos_id = r.mentos_id
		where mm.member_id = #{memberId}
		and m.status != 'DELETE'
		and mm.status != 'DELETE'
	</select>

	<select id="selectMyPaymentListById" parameterType="int" resultType="map">
	select 
	p.order_id as orderId,
	p.amount as amount,
	p.pay_type as payType,
	p.matchup_id as matchupId,
	p.mentos_id as mentosId,
	p.keepgoing_id as keepgoingId,
	p.status as paymentStatus,
	match.title as matchupTitle,
	mentos.title as mentosTitle,
	keep.name as keepgoingName
	from payment p
	LEFT JOIN matchup match ON p.matchup_id = match.matchup_id
	LEFT JOIN mentos mentos ON p.mentos_id = mentos.mentos_id
	LEFT JOIN keepgoing keep ON p.keepgoing_id = keep.keepgoing_id
	where p.member_id = #{memberId}
	and p.status != 'DELETE'
	and p.step = 'SUCCESS'
	</select>
	
	<select id="selectPaymentDetail" parameterType ="String" resultType="map">
		select
		p.order_id as orderId,
		p.amount as amount,
		p.matchup_id as matchupId,
		match.title as matchupTitle,
		match.price as matchupPrice,
		match.matchup_count as matchupCount,
		m.profile_image_url as memberProfileImageUrl,
		p.mentos_id as mentosId,
		mentos.title as mentosTitle,
		mentos.image as mentosImage,
		mentos.START_DAY as mentosStartDay,
		mentos.price as mentosPrice,
		p.keepgoing_id as keepgoingId,
		keep.name as keepgoingName,
		keep.IMG_LOGO as keepgoingImgLogo,
		keep.price as keepgoingPrice,
		p.pay_at as payAt,
		p.pay_type as payType,
		p.status as status
		from payment p
		left join matchup match on p.matchup_id = match.matchup_id
		left join member m on match.leader_id = m.member_id
		left join mentos mentos on p.mentos_id = mentos.mentos_id
		left join keepgoing keep on p.keepgoing_id = keep.keepgoing_id
		where p.order_id = #{_parameter}
		and p.status != 'DELETE'
	</select>

<select id="selectMatchTypebyName" parameterType="com.shinhan.memento.model.SparkTestType" resultType="int">
		SELECT
		match_type_id 
		FROM match_type
		WHERE match_type_name = #{_parameter}
	</select>
	
	<update id="updateMyTypeByMemberId">
	    UPDATE member
	    SET match_type_id = #{matchTypeId}
	    WHERE member_id = #{memberId}
	</update>
	
	<select id="selectMyProfileInfo" parameterType="int" resultType="map">
		select
			m.profile_image_url as profileImgUrl,
			m.NICKNAME as nickName,
			m.INTRODUCE as introduce,
			m.REGION_GROUP as regionGroup,
			m.region_subgroup as regionSubGroup,
			m.region_detail as regionDetail,
			m.phone_number as phoneNumber,
	        i.interest_name as interestName
		from member m
			left join member_interest mi on m.member_id = mi.member_id
			left join interest i on mi.interest_id = i.interest_id
		where m.member_id = #{memberId}
	</select>
	
	<update id="updateProfileInfo" parameterType="com.shinhan.memento.dto.mypage.MyProfileDBUpdateDTO">
		update member
		set NICKNAME = #{nickname}, PHONE_NUMBER = #{phoneNumber}, INTRODUCE = #{introduce}, REGION_GROUP = #{regionGroup} , REGION_SUBGROUP = #{regionSubGroup}, REGION_DETAIL = #{regionDetail}
		where member_id = #{memberId}
	</update>
	
	<select id="myJoinMatchupByDashboard" parameterType="int" resultType="map">
		select *
		from(
			select
				leader.member_id as leaderId,
				leader.profile_image_url as leaderProfileImageUrl,
				match.title as title,
				match.count as totalCount,
				match.matchup_count as currentCount,
				match.status as matchStatus,
				match.has_mento as hasMento
			from member_matchup mm
				left join matchup match on mm.matchup_id = match.matchup_id
				left join member leader on match.leader_id = leader.member_id
			where mm.member_id = #{memberId}
				and mm.status !='DELETE'
			order by totalcount desc, currentcount desc
			)
		WHERE ROWNUM <![CDATA[<=]]> 2
	</select>
	<select id="myCreateMatchupByDashboard" parameterType="int" resultType="map">
		select *
		from(
			select
				leader.member_id as leaderId,
				leader.profile_image_url as leaderProfileImageUrl,
				match.title as title,
				match.count as totalCount,
				match.matchup_count as currentCount,
				match.status as matchStatus,
				match.has_mento as hasMento
			from matchup match
				left join member leader on match.leader_id = leader.member_id
			where match.leader_id = #{memberId}
				and match.status !='DELETE'
			)
		WHERE ROWNUM <![CDATA[<=]]> 1
	</select>
	
	<select id="myJoinMentosByDashboard" parameterType="int" resultType="map">
		select *
		    from (
		        select
		           men.title as mentosTitle,
		           men.image as mentosImage,
		           men.mento_id as mentoId,
		           mento.nickname as mentoNickname,
		           men.status as mentosStatus
		        from member_mentos mm
		            left join mentos men on mm.mentos_id = men.MENTOS_ID
		            left join member mento on men.mento_id = mento.member_id
		        where mm.member_id = #{memberId}
		        and mm.status != 'DELETE'
		    )
		WHERE ROWNUM <![CDATA[<=]]> 3
	</select>
	
	<select id="myMatchTypeByDashboard" parameterType="int" resultType="com.shinhan.memento.dto.mypage.MyMatchTypeByDashboardResponseDTO">
		select 
			mt.MATCH_TYPE_NAME as matchTypeName,
			mt.MATCH_TYPE_IMG as matchTypeImg
		from member m
			left join match_type mt on m.match_type_id = mt.MATCH_TYPE_ID
		where m.member_id = #{memberId}
    </select>

	<select id ="refundSelectData" resultType="map">
		select
			p.order_id as orderId,
			p.amount as amount,
			p.pay_type as payType,
			p.matchup_id as matchupId,
			match.price as matchupPrice,
			p.mentos_id as mentosId,
			mentos.price as mentosPrice,
			p.keepgoing_id as keepgoingId,
			keep.price as keepgoingPrice,
			ub.BALANCE as userBalance,
			m.POINT as memberPoint
		from payment p
			left join USERBALANCE ub on p.member_id = ub.member_id
			left join member m on p.member_id = m.member_id
			left join matchup match on p.matchup_id = match.matchup_id
			left join mentos mentos on p.mentos_id = mentos.mentos_id
			left join keepgoing keep on p.keepgoing_id = keep.keepgoing_id
		where p.member_id = #{memberId} 
		and p.order_id = #{orderId} 
		and p.status != 'DELETE'
	</select>
	
	<update id="updateUserBalanceByRefund">
		update
			USERBALANCE 
		set balance = #{resultBalance}
		where member_id = #{memberId}
			and status = 'ACTIVE'
	</update>
	
	<update id="updatePaymentByRefund">
		update
			payment
		set pay_type = 'REFUND',
			pay_at = sysdate,
			status = 'INACTIVE'
		where order_id = #{orderId}
			and status != 'DELETE'
	</update>
	
	<select id="selectMySideBarInfo" parameterType="int" resultType="com.shinhan.memento.dto.mypage.MyPageSideBarResponseDTO">
		select
			m.profile_image_url as profileImageUrl,
			m.nickname as nickname,
			m.user_type as userType,
			m.point as point,
			ub.balance as balance
		from member m
			left join userbalance ub on m.member_id = ub.member_id
		where m.member_id = #{memberId} 
			and m.status = 'ACTIVE'

	</select>

    <resultMap id="MentoTestHistoryMap" type="com.shinhan.memento.model.MentoTestHistory">
        <id property="mentotestHistoryId" column="mentotest_history_id"/>
        <result property="memberId" column="member_id"/>
        <result property="testAt" column="test_at"/>
    </resultMap>
    
<select id="selectMentoTestHistory"  resultMap="MentoTestHistoryMap">
		SELECT
			mentotest_history_id,
			member_id,
			test_at
		FROM mentotest_history
		WHERE member_id = #{userId}
		  AND TO_CHAR(test_at, 'YYYY-MM-DD') = #{now}
	</select>
	
	
	<insert id="insertMentoTestHistory" parameterType="com.shinhan.memento.model.MentoTestHistory">
	INSERT INTO mentotest_history(
			mentotest_history_id,
			member_id,
			test_at,
			status
	)VALUES(
			seq_mentotest_history_id.NEXTVAL,
			#{memberId},
			#{testAt},
			#{status}
	)
	</insert>
	
		<update id="updateMemberUserType" parameterType="map">
		UPDATE member
		SET user_type = #{userType}
		WHERE member_id = #{userId}
	</update>
	
</mapper>